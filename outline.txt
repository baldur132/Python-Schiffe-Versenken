Outline for Battle Ship Game
----------------------------

Current Class Structure
Class Game
  method: print_battlefield
  method: print_ships
  method: place_battleship
  method: place_cruiser
  method: place_destroyer
  method: place_submarine
  method: place_ships_one
  method: place_ships_two
  method: get_shot_one
  method: get_shot_two

Class Shooting
  method: print_shooting_range
  method: shoot
  method: shooting_ai
  method: shoot_at_ai
  method: game_winner
  
Suggested Class Structure
Class Game
  method: print_battlefield

Class Ship
  attribute: position
  attribute: orientation
  attribute: sunken
  attribute: placed
  method: place
  
    Subclass Battleship
      fixed attribute: length
      method: get_hit
      
    Subclass Cruiser
      fixed attribute: length
      method: get_hit
      
    Subclass Destroyer
      fixed attribute: length
      method: get_hit
      
    Subclass Submarine
      fixed attribute: length
      method: get_hit
    
    
Class Player
    method: get_shot
  Subclass Human
      method: shoot
      method: place_ships
  Subclass AI
      method: shoot
      

Possible Improvements
 - Using keyboard module to immediately capture keyboard inputs --> better responsiveness
 - Create new class for ships, with subclasses for each type --> prevent god class, better organization
 - Create new class for players, with subclasses for player and computer --> allows expandability, improves readability
 - Make the user interface less confusing/easier and faster to use
 - Change the storage method of the game board to contain legends, as that should be added in the respective print() functions
 - Alter/Remove global functions in favor of implementing the functionality in print() and input capture
 - Merge ai_enemy functions into the players->ai subclasses

Current Issues
 - ship placement is annoying to use, especially with repeated actions/typing
 - in two player mode it's unclear as to which player is currently doing actions (add player label)
 - field placement is clunky, especially as you have to input row and column separately
 - no feedback if ship is destroyed
 
 
    | a | b | c | d | e | f | g | h | i | j |
 1  |   |   |   |   |   |   |   |   |   |   |
 2  |   |   |   |   |   |   |   |   |   |   |
 3  |   |   |   |   |   |   |   |   |   |   |
 4  |   |   |   |   |   |   |   |   |   |   |
 5  |   |   |   |   |   |   |   |   |   |   |
 6  |   |   |   |   |   |   |   |   |   |   |
 7  |   |   |   |   |   |   |   |   |   |   |
 8  |   |   |   |   |   |   |   |   |   |   |
 9  |   |   |   |   |   |   |   |   |   |   |
 10 |   |   |   |   |   |   |   |   |   |   |

ships:

| [ = = = > |
 
| ^ |
| H |
| H |
| - |

Feld:
x = 0-9
y = 0-9

pos = [x, y]

ships = {
            "Battleships": [object],                      #array containing battleships
            "Cruisers":    [object, object],              #array containing cruisers
            "Destroyers":  [object, object, object],      #array containing destoryers
            "Submarines":  [object, object, object],      #array containing submarines
        }

shooting_range =    {
                        "a3" : True     #a3 : col a, row 3 has a hit
                        "e4" : False    #e4 : col e, row 4 has a miss
                    }                   #all other values are unknown, only the squares
                                        #that have been fired upon have a saved value

Missing Features
 - Display Player's own ships when firing
 - Allow custom player names
 - Add custom game modes
 - 